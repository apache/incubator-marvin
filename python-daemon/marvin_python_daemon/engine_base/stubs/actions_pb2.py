# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: actions.proto

from google.protobuf import descriptor_pb2
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import reflection as _reflection
from google.protobuf import message as _message
from google.protobuf import descriptor as _descriptor
import sys
_b = sys.version_info[0] < 3 and (
    lambda x: x) or (lambda x: x.encode('latin1'))
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name='actions.proto',
    package='',
    syntax='proto3',
    serialized_pb=_b('\n\ractions.proto\"6\n\x13OnlineActionRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0e\n\x06params\x18\x02 \x01(\t\"\'\n\x14OnlineActionResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"$\n\x12\x42\x61tchActionRequest\x12\x0e\n\x06params\x18\x01 \x01(\t\"&\n\x13\x42\x61tchActionResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"4\n\rReloadRequest\x12\x10\n\x08protocol\x18\x01 \x01(\t\x12\x11\n\tartifacts\x18\x02 \x01(\t\"!\n\x0eReloadResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"\'\n\x12HealthCheckRequest\x12\x11\n\tartifacts\x18\x02 \x01(\t\"]\n\x13HealthCheckResponse\x12+\n\x06status\x18\x01 \x01(\x0e\x32\x1b.HealthCheckResponse.Status\"\x19\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x07\n\x03NOK\x10\x01\x32\xca\x01\n\x13OnlineActionHandler\x12@\n\x0f_remote_execute\x12\x14.OnlineActionRequest\x1a\x15.OnlineActionResponse\"\x00\x12\x33\n\x0e_remote_reload\x12\x0e.ReloadRequest\x1a\x0f.ReloadResponse\"\x00\x12<\n\r_health_check\x12\x13.HealthCheckRequest\x1a\x14.HealthCheckResponse\"\x00\x32\xc7\x01\n\x12\x42\x61tchActionHandler\x12>\n\x0f_remote_execute\x12\x13.BatchActionRequest\x1a\x14.BatchActionResponse\"\x00\x12\x33\n\x0e_remote_reload\x12\x0e.ReloadRequest\x1a\x0f.ReloadResponse\"\x00\x12<\n\r_health_check\x12\x13.HealthCheckRequest\x1a\x14.HealthCheckResponse\"\x00\x62\x06proto3')
)


_HEALTHCHECKRESPONSE_STATUS = _descriptor.EnumDescriptor(
    name='Status',
    full_name='HealthCheckResponse.Status',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='OK', index=0, number=0,
            options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='NOK', index=1, number=1,
            options=None,
            type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=390,
    serialized_end=415,
)
_sym_db.RegisterEnumDescriptor(_HEALTHCHECKRESPONSE_STATUS)


_ONLINEACTIONREQUEST = _descriptor.Descriptor(
    name='OnlineActionRequest',
    full_name='OnlineActionRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='message', full_name='OnlineActionRequest.message', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='params', full_name='OnlineActionRequest.params', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=17,
    serialized_end=71,
)


_ONLINEACTIONRESPONSE = _descriptor.Descriptor(
    name='OnlineActionResponse',
    full_name='OnlineActionResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='message', full_name='OnlineActionResponse.message', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=73,
    serialized_end=112,
)


_BATCHACTIONREQUEST = _descriptor.Descriptor(
    name='BatchActionRequest',
    full_name='BatchActionRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='params', full_name='BatchActionRequest.params', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=114,
    serialized_end=150,
)


_BATCHACTIONRESPONSE = _descriptor.Descriptor(
    name='BatchActionResponse',
    full_name='BatchActionResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='message', full_name='BatchActionResponse.message', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=152,
    serialized_end=190,
)


_RELOADREQUEST = _descriptor.Descriptor(
    name='ReloadRequest',
    full_name='ReloadRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='protocol', full_name='ReloadRequest.protocol', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='artifacts', full_name='ReloadRequest.artifacts', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=192,
    serialized_end=244,
)


_RELOADRESPONSE = _descriptor.Descriptor(
    name='ReloadResponse',
    full_name='ReloadResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='message', full_name='ReloadResponse.message', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=246,
    serialized_end=279,
)


_HEALTHCHECKREQUEST = _descriptor.Descriptor(
    name='HealthCheckRequest',
    full_name='HealthCheckRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='artifacts', full_name='HealthCheckRequest.artifacts', index=0,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=281,
    serialized_end=320,
)


_HEALTHCHECKRESPONSE = _descriptor.Descriptor(
    name='HealthCheckResponse',
    full_name='HealthCheckResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='status', full_name='HealthCheckResponse.status', index=0,
            number=1, type=14, cpp_type=8, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
        _HEALTHCHECKRESPONSE_STATUS,
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=322,
    serialized_end=415,
)

_HEALTHCHECKRESPONSE.fields_by_name['status'].enum_type = _HEALTHCHECKRESPONSE_STATUS
_HEALTHCHECKRESPONSE_STATUS.containing_type = _HEALTHCHECKRESPONSE
DESCRIPTOR.message_types_by_name['OnlineActionRequest'] = _ONLINEACTIONREQUEST
DESCRIPTOR.message_types_by_name['OnlineActionResponse'] = _ONLINEACTIONRESPONSE
DESCRIPTOR.message_types_by_name['BatchActionRequest'] = _BATCHACTIONREQUEST
DESCRIPTOR.message_types_by_name['BatchActionResponse'] = _BATCHACTIONRESPONSE
DESCRIPTOR.message_types_by_name['ReloadRequest'] = _RELOADREQUEST
DESCRIPTOR.message_types_by_name['ReloadResponse'] = _RELOADRESPONSE
DESCRIPTOR.message_types_by_name['HealthCheckRequest'] = _HEALTHCHECKREQUEST
DESCRIPTOR.message_types_by_name['HealthCheckResponse'] = _HEALTHCHECKRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OnlineActionRequest = _reflection.GeneratedProtocolMessageType('OnlineActionRequest', (_message.Message,), dict(
    DESCRIPTOR=_ONLINEACTIONREQUEST,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:OnlineActionRequest)
))
_sym_db.RegisterMessage(OnlineActionRequest)

OnlineActionResponse = _reflection.GeneratedProtocolMessageType('OnlineActionResponse', (_message.Message,), dict(
    DESCRIPTOR=_ONLINEACTIONRESPONSE,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:OnlineActionResponse)
))
_sym_db.RegisterMessage(OnlineActionResponse)

BatchActionRequest = _reflection.GeneratedProtocolMessageType('BatchActionRequest', (_message.Message,), dict(
    DESCRIPTOR=_BATCHACTIONREQUEST,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:BatchActionRequest)
))
_sym_db.RegisterMessage(BatchActionRequest)

BatchActionResponse = _reflection.GeneratedProtocolMessageType('BatchActionResponse', (_message.Message,), dict(
    DESCRIPTOR=_BATCHACTIONRESPONSE,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:BatchActionResponse)
))
_sym_db.RegisterMessage(BatchActionResponse)

ReloadRequest = _reflection.GeneratedProtocolMessageType('ReloadRequest', (_message.Message,), dict(
    DESCRIPTOR=_RELOADREQUEST,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:ReloadRequest)
))
_sym_db.RegisterMessage(ReloadRequest)

ReloadResponse = _reflection.GeneratedProtocolMessageType('ReloadResponse', (_message.Message,), dict(
    DESCRIPTOR=_RELOADRESPONSE,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:ReloadResponse)
))
_sym_db.RegisterMessage(ReloadResponse)

HealthCheckRequest = _reflection.GeneratedProtocolMessageType('HealthCheckRequest', (_message.Message,), dict(
    DESCRIPTOR=_HEALTHCHECKREQUEST,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:HealthCheckRequest)
))
_sym_db.RegisterMessage(HealthCheckRequest)

HealthCheckResponse = _reflection.GeneratedProtocolMessageType('HealthCheckResponse', (_message.Message,), dict(
    DESCRIPTOR=_HEALTHCHECKRESPONSE,
    __module__='actions_pb2'
    # @@protoc_insertion_point(class_scope:HealthCheckResponse)
))
_sym_db.RegisterMessage(HealthCheckResponse)


_ONLINEACTIONHANDLER = _descriptor.ServiceDescriptor(
    name='OnlineActionHandler',
    full_name='OnlineActionHandler',
    file=DESCRIPTOR,
    index=0,
    options=None,
    serialized_start=418,
    serialized_end=620,
    methods=[
        _descriptor.MethodDescriptor(
            name='_remote_execute',
            full_name='OnlineActionHandler._remote_execute',
            index=0,
            containing_service=None,
            input_type=_ONLINEACTIONREQUEST,
            output_type=_ONLINEACTIONRESPONSE,
            options=None,
        ),
        _descriptor.MethodDescriptor(
            name='_remote_reload',
            full_name='OnlineActionHandler._remote_reload',
            index=1,
            containing_service=None,
            input_type=_RELOADREQUEST,
            output_type=_RELOADRESPONSE,
            options=None,
        ),
        _descriptor.MethodDescriptor(
            name='_health_check',
            full_name='OnlineActionHandler._health_check',
            index=2,
            containing_service=None,
            input_type=_HEALTHCHECKREQUEST,
            output_type=_HEALTHCHECKRESPONSE,
            options=None,
        ),
    ])
_sym_db.RegisterServiceDescriptor(_ONLINEACTIONHANDLER)

DESCRIPTOR.services_by_name['OnlineActionHandler'] = _ONLINEACTIONHANDLER


_BATCHACTIONHANDLER = _descriptor.ServiceDescriptor(
    name='BatchActionHandler',
    full_name='BatchActionHandler',
    file=DESCRIPTOR,
    index=1,
    options=None,
    serialized_start=623,
    serialized_end=822,
    methods=[
        _descriptor.MethodDescriptor(
            name='_remote_execute',
            full_name='BatchActionHandler._remote_execute',
            index=0,
            containing_service=None,
            input_type=_BATCHACTIONREQUEST,
            output_type=_BATCHACTIONRESPONSE,
            options=None,
        ),
        _descriptor.MethodDescriptor(
            name='_remote_reload',
            full_name='BatchActionHandler._remote_reload',
            index=1,
            containing_service=None,
            input_type=_RELOADREQUEST,
            output_type=_RELOADRESPONSE,
            options=None,
        ),
        _descriptor.MethodDescriptor(
            name='_health_check',
            full_name='BatchActionHandler._health_check',
            index=2,
            containing_service=None,
            input_type=_HEALTHCHECKREQUEST,
            output_type=_HEALTHCHECKRESPONSE,
            options=None,
        ),
    ])
_sym_db.RegisterServiceDescriptor(_BATCHACTIONHANDLER)

DESCRIPTOR.services_by_name['BatchActionHandler'] = _BATCHACTIONHANDLER

try:
    # THESE ELEMENTS WILL BE DEPRECATED.
    # Please use the generated *_pb2_grpc.py files instead.
    import grpc
    from grpc.beta import implementations as beta_implementations
    from grpc.beta import interfaces as beta_interfaces
    from grpc.framework.common import cardinality
    from grpc.framework.interfaces.face import utilities as face_utilities

    class OnlineActionHandlerStub(object):
        # missing associated documentation comment in .proto file
        pass

        def __init__(self, channel):
            """Constructor.

            Args:
              channel: A grpc.Channel.
            """
            self._remote_execute = channel.unary_unary(
                '/OnlineActionHandler/_remote_execute',
                request_serializer=OnlineActionRequest.SerializeToString,
                response_deserializer=OnlineActionResponse.FromString,
            )
            self._remote_reload = channel.unary_unary(
                '/OnlineActionHandler/_remote_reload',
                request_serializer=ReloadRequest.SerializeToString,
                response_deserializer=ReloadResponse.FromString,
            )
            self._health_check = channel.unary_unary(
                '/OnlineActionHandler/_health_check',
                request_serializer=HealthCheckRequest.SerializeToString,
                response_deserializer=HealthCheckResponse.FromString,
            )

    class OnlineActionHandlerServicer(object):
        # missing associated documentation comment in .proto file
        pass

        def _remote_execute(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def _remote_reload(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def _health_check(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

    def add_OnlineActionHandlerServicer_to_server(servicer, server):
        rpc_method_handlers = {
            '_remote_execute': grpc.unary_unary_rpc_method_handler(
                servicer._remote_execute,
                request_deserializer=OnlineActionRequest.FromString,
                response_serializer=OnlineActionResponse.SerializeToString,
            ),
            '_remote_reload': grpc.unary_unary_rpc_method_handler(
                servicer._remote_reload,
                request_deserializer=ReloadRequest.FromString,
                response_serializer=ReloadResponse.SerializeToString,
            ),
            '_health_check': grpc.unary_unary_rpc_method_handler(
                servicer._health_check,
                request_deserializer=HealthCheckRequest.FromString,
                response_serializer=HealthCheckResponse.SerializeToString,
            ),
        }
        generic_handler = grpc.method_handlers_generic_handler(
            'OnlineActionHandler', rpc_method_handlers)
        server.add_generic_rpc_handlers((generic_handler,))

    class BatchActionHandlerStub(object):
        # missing associated documentation comment in .proto file
        pass

        def __init__(self, channel):
            """Constructor.

            Args:
              channel: A grpc.Channel.
            """
            self._remote_execute = channel.unary_unary(
                '/BatchActionHandler/_remote_execute',
                request_serializer=BatchActionRequest.SerializeToString,
                response_deserializer=BatchActionResponse.FromString,
            )
            self._remote_reload = channel.unary_unary(
                '/BatchActionHandler/_remote_reload',
                request_serializer=ReloadRequest.SerializeToString,
                response_deserializer=ReloadResponse.FromString,
            )
            self._health_check = channel.unary_unary(
                '/BatchActionHandler/_health_check',
                request_serializer=HealthCheckRequest.SerializeToString,
                response_deserializer=HealthCheckResponse.FromString,
            )

    class BatchActionHandlerServicer(object):
        # missing associated documentation comment in .proto file
        pass

        def _remote_execute(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def _remote_reload(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def _health_check(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

    def add_BatchActionHandlerServicer_to_server(servicer, server):
        rpc_method_handlers = {
            '_remote_execute': grpc.unary_unary_rpc_method_handler(
                servicer._remote_execute,
                request_deserializer=BatchActionRequest.FromString,
                response_serializer=BatchActionResponse.SerializeToString,
            ),
            '_remote_reload': grpc.unary_unary_rpc_method_handler(
                servicer._remote_reload,
                request_deserializer=ReloadRequest.FromString,
                response_serializer=ReloadResponse.SerializeToString,
            ),
            '_health_check': grpc.unary_unary_rpc_method_handler(
                servicer._health_check,
                request_deserializer=HealthCheckRequest.FromString,
                response_serializer=HealthCheckResponse.SerializeToString,
            ),
        }
        generic_handler = grpc.method_handlers_generic_handler(
            'BatchActionHandler', rpc_method_handlers)
        server.add_generic_rpc_handlers((generic_handler,))

    class BetaOnlineActionHandlerServicer(object):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
        # missing associated documentation comment in .proto file
        pass

        def _remote_execute(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def _remote_reload(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def _health_check(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

    class BetaOnlineActionHandlerStub(object):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
        # missing associated documentation comment in .proto file
        pass

        def _remote_execute(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            # missing associated documentation comment in .proto file
            pass
            raise NotImplementedError()
        _remote_execute.future = None

        def _remote_reload(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            # missing associated documentation comment in .proto file
            pass
            raise NotImplementedError()
        _remote_reload.future = None

        def _health_check(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            # missing associated documentation comment in .proto file
            pass
            raise NotImplementedError()
        _health_check.future = None

    def beta_create_OnlineActionHandler_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_deserializers = {
            ('OnlineActionHandler', '_health_check'): HealthCheckRequest.FromString,
            ('OnlineActionHandler', '_remote_execute'): OnlineActionRequest.FromString,
            ('OnlineActionHandler', '_remote_reload'): ReloadRequest.FromString,
        }
        response_serializers = {
            ('OnlineActionHandler', '_health_check'): HealthCheckResponse.SerializeToString,
            ('OnlineActionHandler', '_remote_execute'): OnlineActionResponse.SerializeToString,
            ('OnlineActionHandler', '_remote_reload'): ReloadResponse.SerializeToString,
        }
        method_implementations = {
            ('OnlineActionHandler', '_health_check'): face_utilities.unary_unary_inline(servicer._health_check),
            ('OnlineActionHandler', '_remote_execute'): face_utilities.unary_unary_inline(servicer._remote_execute),
            ('OnlineActionHandler', '_remote_reload'): face_utilities.unary_unary_inline(servicer._remote_reload),
        }
        server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers,
                                                             thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
        return beta_implementations.server(method_implementations, options=server_options)

    def beta_create_OnlineActionHandler_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_serializers = {
            ('OnlineActionHandler', '_health_check'): HealthCheckRequest.SerializeToString,
            ('OnlineActionHandler', '_remote_execute'): OnlineActionRequest.SerializeToString,
            ('OnlineActionHandler', '_remote_reload'): ReloadRequest.SerializeToString,
        }
        response_deserializers = {
            ('OnlineActionHandler', '_health_check'): HealthCheckResponse.FromString,
            ('OnlineActionHandler', '_remote_execute'): OnlineActionResponse.FromString,
            ('OnlineActionHandler', '_remote_reload'): ReloadResponse.FromString,
        }
        cardinalities = {
            '_health_check': cardinality.Cardinality.UNARY_UNARY,
            '_remote_execute': cardinality.Cardinality.UNARY_UNARY,
            '_remote_reload': cardinality.Cardinality.UNARY_UNARY,
        }
        stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers,
                                                         response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
        return beta_implementations.dynamic_stub(channel, 'OnlineActionHandler', cardinalities, options=stub_options)

    class BetaBatchActionHandlerServicer(object):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
        # missing associated documentation comment in .proto file
        pass

        def _remote_execute(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def _remote_reload(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def _health_check(self, request, context):
            # missing associated documentation comment in .proto file
            pass
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

    class BetaBatchActionHandlerStub(object):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
        # missing associated documentation comment in .proto file
        pass

        def _remote_execute(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            # missing associated documentation comment in .proto file
            pass
            raise NotImplementedError()
        _remote_execute.future = None

        def _remote_reload(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            # missing associated documentation comment in .proto file
            pass
            raise NotImplementedError()
        _remote_reload.future = None

        def _health_check(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            # missing associated documentation comment in .proto file
            pass
            raise NotImplementedError()
        _health_check.future = None

    def beta_create_BatchActionHandler_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_deserializers = {
            ('BatchActionHandler', '_health_check'): HealthCheckRequest.FromString,
            ('BatchActionHandler', '_remote_execute'): BatchActionRequest.FromString,
            ('BatchActionHandler', '_remote_reload'): ReloadRequest.FromString,
        }
        response_serializers = {
            ('BatchActionHandler', '_health_check'): HealthCheckResponse.SerializeToString,
            ('BatchActionHandler', '_remote_execute'): BatchActionResponse.SerializeToString,
            ('BatchActionHandler', '_remote_reload'): ReloadResponse.SerializeToString,
        }
        method_implementations = {
            ('BatchActionHandler', '_health_check'): face_utilities.unary_unary_inline(servicer._health_check),
            ('BatchActionHandler', '_remote_execute'): face_utilities.unary_unary_inline(servicer._remote_execute),
            ('BatchActionHandler', '_remote_reload'): face_utilities.unary_unary_inline(servicer._remote_reload),
        }
        server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers,
                                                             thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
        return beta_implementations.server(method_implementations, options=server_options)

    def beta_create_BatchActionHandler_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
        """The Beta API is deprecated for 0.15.0 and later.

        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_serializers = {
            ('BatchActionHandler', '_health_check'): HealthCheckRequest.SerializeToString,
            ('BatchActionHandler', '_remote_execute'): BatchActionRequest.SerializeToString,
            ('BatchActionHandler', '_remote_reload'): ReloadRequest.SerializeToString,
        }
        response_deserializers = {
            ('BatchActionHandler', '_health_check'): HealthCheckResponse.FromString,
            ('BatchActionHandler', '_remote_execute'): BatchActionResponse.FromString,
            ('BatchActionHandler', '_remote_reload'): ReloadResponse.FromString,
        }
        cardinalities = {
            '_health_check': cardinality.Cardinality.UNARY_UNARY,
            '_remote_execute': cardinality.Cardinality.UNARY_UNARY,
            '_remote_reload': cardinality.Cardinality.UNARY_UNARY,
        }
        stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers,
                                                         response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
        return beta_implementations.dynamic_stub(channel, 'BatchActionHandler', cardinalities, options=stub_options)
except ImportError:
    pass
# @@protoc_insertion_point(module_scope)
